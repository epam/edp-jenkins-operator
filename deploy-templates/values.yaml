global:
  # -- namespace or a project name (in case of OpenShift)
  edpName: ""
  # -- platform type that can be "kubernetes" or "openshift"
  platform: "kubernetes"
  # -- a cluster DNS wildcard name
  dnsWildCard:
  openshift:
    # -- Wich type of kind will be deployed to Openshift (values: deployments/deploymentConfigs)
    deploymentType: "deployments"

# -- component name
name: jenkins-operator
annotations: {}
nodeSelector: {}
tolerations: []
affinity: {}
image:
  # -- EDP jenkins-operator Docker image name. The released image can be found on [Dockerhub](https://hub.docker.com/r/epamedp/jenkins-operator)
  repository: epamedp/jenkins-operator
  # if not defined then .Chart.AppVersion is used
  # -- EDP jenkins-operator Docker image tag. The released image can be found on [Dockerhub](https://hub.docker.com/r/epamedp/jenkins-operator/tags)
  tag:
imagePullPolicy: "IfNotPresent"

resources:
  limits:
    memory: 192Mi
  requests:
    cpu: 50m
    memory: 64Mi

# -- Additional volumes to be added to the pod
extraVolumes: []
#  - name: custom-ca
#    secret:
#      defaultMode: 420
#      secretName: custom-ca

# -- Additional volumeMounts to be added to the container
extraVolumeMounts: []
#  - name: custom-ca
#    mountPath: /etc/ssl/certs/CA.crt
#    readOnly: true
#    subPath: CA.crt

jenkins:
  # -- Flag to enable/disable Jenkins deploy
  deploy: true
  # --  Init Docker image for Jenkins deployment. Default is "busybox"
  initImage: "busybox:1.35.0"
  # -- EDP Jenkins Docker image name. Default supported is "epamedp/edp-jenkins"
  image: "epamedp/edp-jenkins"
  # -- EDP Jenkins Docker image tag
  version: "2.14.0-SNAPSHOT"
  imagePullPolicy: "IfNotPresent"
  storage:
    # -- Storageclass for Jenkins data volume
    # class: gp2
    # -- Jenkins data volume capacity
    size: 10Gi
  annotations: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    annotations: {}
    # -- pathType is only for k8s >= 1.1=
    pathType: Prefix
    # -- For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
    # -- See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
    # ingressClassName: nginx
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  sharedLibraries:
      # -- EDP shared-library name
    - name: "edp-library-stages"
      # -- EDP shared-library repository link
      url: "https://github.com/epam/edp-library-stages.git"
      # -- EDP shared-library repository version
      tag: "master"
    - name: "edp-library-pipelines"
      url: "https://github.com/epam/edp-library-pipelines.git"
      tag: "master"
# Example of using private repository:
#    - name: "stub-name"
#      url: "stub-url"
#      tag: "stub-tag"
#      secret: "stub-secret-name"
#      type: "ssh" # can be "ssh", "password" or "token"
  # -- Secrets to pull from private Docker registry
  imagePullSecrets:
#  basePath: ""

  resources:
    limits:
      memory: 5Gi
    requests:
      cpu: 1000m
      memory: 1500Mi

  # Provide a secret containing one or more certificate files in the keys that will be added to cacerts
  # The cacerts file will be set via JENKINS_JAVA_OPTIONS
  caCerts:
    # -- Flag for enabling additional CA certificates
    enabled: false
    # -- Change init CA certificates container image
    image: adoptopenjdk/openjdk11:alpine
    # -- Name of the secret containing additional CA certificates
    secret: secret-name

  # -- Values to add to JENKINS_JAVA_OPTIONS
  jenkinsJavaOptions: ""
